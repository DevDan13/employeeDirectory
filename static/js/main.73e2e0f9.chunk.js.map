{"version":3,"sources":["utils/Api.js","components/SortBtn/index.js","components/Table/index.js","components/SearchForm/index.js","components/Container/index.js","App.js","index.js"],"names":["API","getRandomUsers","axios","get","Sort","props","className","type","onClick","sort","Table","tableHeadDisplay","tableCellHeaders","map","tableHead","i","displayData","displayTable","data","name","first","last","email","cell","sorted","Search","value","search","onChange","e","setSearch","target","Container","children","App","useState","employees","setEmployees","filteredEmployees","setFilteredEmployees","sortedEmployees","setSortedEmployees","useEffect","then","res","console","log","results","filteredResult","filter","employee","toLowerCase","includes","a","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"qRAWeA,EAPH,CACRC,eAAgB,WACZ,OAAOC,IAAMC,IAAI,kD,YCHV,SAASC,EAAKC,GACzB,OACI,wBACAC,UAAU,eACVC,KAAK,SACLC,QAASH,EAAMI,KAHf,4BCDO,SAASC,EAAML,GAI1B,IAAMM,EAAmBN,EAAMO,iBAAiBC,KAAK,SAACC,EAAWC,GAE7D,OAAO,6BAAaD,GAAJC,MAGdC,EAAcX,EAAMY,aAAaJ,KAAK,SAACK,EAAMH,GAE/C,OACK,+BACI,6BAAKG,EAAKC,KAAKC,QACf,6BAAKF,EAAKC,KAAKE,OACf,6BAAKH,EAAKI,QACV,6BAAKJ,EAAKK,SAJLR,MAWlB,OACI,wBAAOT,UAAU,sBAAjB,UACI,wBAAOA,UAAU,aAAjB,UACI,cAACF,EAAD,CAAMK,KAAMJ,EAAMI,KAAMe,OAAQnB,EAAMmB,SAAS,6BAE1Cb,OAKT,gCACSK,OCpCN,SAASS,EAAOpB,GAE3B,OACI,uBAAOE,KAAK,OACZmB,MAAOrB,EAAMsB,OACbC,SAAU,SAACC,GACPxB,EAAMyB,UAAUD,EAAEE,OAAOL,U,MCDpBM,MAHjB,SAAmB3B,GACf,OAAO,sBAAMC,UAAU,YAAhB,SAA6BD,EAAM4B,YC6F/BC,MA1Ff,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAEJC,EAFI,KAEOC,EAFP,OAGiBF,mBAAS,IAH1B,mBAGJR,EAHI,KAGIG,EAHJ,OAIuCK,mBAAS,IAJhD,mBAIJG,EAJI,KAIeC,EAJf,OAKmCJ,mBAAS,IAL5C,mBAKJK,EALI,KAKaC,EALb,KA+EX,OAtEAC,qBAAU,WACN1C,EAAIC,iBAAiB0C,MAAK,SAACC,GACvBC,QAAQC,IAAIF,GACZP,EAAaO,EAAI1B,KAAK6B,cAG3B,IAgBHL,qBAAU,WACN,GAAIf,EAAQ,CACR,IAAMqB,EAAiBZ,EAAUa,QAAO,SAAAC,GACpC,GACIA,EAAS/B,KAAKC,MAAM+B,cAAcC,SAASzB,IAC3CuB,EAAS/B,KAAKE,KAAK8B,cAAcC,SAASzB,IAC1CuB,EAAS/B,KAAKC,MAAMgC,SAASzB,IAC7BuB,EAAS/B,KAAKE,KAAK+B,SAASzB,GAE5B,OAAOuB,KAIfX,EAAqBS,MAE1B,CAACrB,EAAQS,IAkCR,cAAC,EAAD,UACI,gCACI,cAACX,EAAD,CAAQE,OAAQA,EAAQG,UAAWA,IACnC,cAACpB,EAAD,CAAOE,iBA7EM,CAAC,QAAS,OAAQ,SAAU,SA6EEK,aAAeU,EAAqBW,EAAZF,EAA+B3B,KA3B9G,WACI,IAAIA,EACAkB,GACAlB,EAAO6B,EAAkB7B,MAAK,SAAC4C,EAAGC,GAC9B,OAAOD,EAAElC,KAAKC,MAAMmC,cAAcD,EAAEnC,KAAKC,UAE7CyB,QAAQC,IAAIrC,KAGZA,EAAO2B,EAAU3B,MAAK,SAAC4C,EAAGC,GACtB,OAAOD,EAAElC,KAAKC,MAAMmC,cAAcD,EAAEnC,KAAKC,UAE7CyB,QAAQC,IAAIrC,IAGhBgC,EAAmBhC,IAY4Ge,OAAQgB,U,YCrF/IgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.73e2e0f9.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Random User API\n\nconst API = {\n    getRandomUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=20&nat=us\");\n      }\n}\n\n\nexport default API;","import React from 'react'\nimport \"./style.css\"\n\nexport default function Sort(props) {\n    return (\n        <button \n        className=\"btn btn-dark\"\n        type=\"submit\"\n        onClick={props.sort}>\n            Sort Employees\n        </button>\n    )\n}\n","import React from 'react'\nimport \"./style.css\";\nimport Sort from \"../SortBtn/index\";\n\nexport default function Table(props) {\n\n    //console.log(props.displayTable)\n\n    const tableHeadDisplay = props.tableCellHeaders.map( (tableHead, i) => {\n        //console.log(tableHead);\n        return <th key={i}>{tableHead}</th>;\n    })\n\n    const displayData = props.displayTable.map( (data, i) => {\n        //console.log(data);\n        return(\n             <tr key={i}>\n                 <td>{data.name.first}</td>\n                 <td>{data.name.last}</td>\n                 <td>{data.email}</td>\n                 <td>{data.cell}</td>\n\n             </tr>\n             \n        );\n    })\n\n    return (\n        <table className=\"table table-striped\">\n            <thead className=\"thead-dark\">\n                <Sort sort={props.sort} sorted={props.sorted}/><tr>\n                \n                    {tableHeadDisplay}\n\n                </tr>\n            </thead>\n\n            <tbody>\n                    {displayData}\n            </tbody>            \n        </table>\n    )\n}\n","import React from 'react'\n\nexport default function Search(props) {\n    //console.log(\"props\", props);\n    return (\n        <input type=\"text\" \n        value={props.search} \n        onChange={(e) => {\n            props.setSearch(e.target.value);\n        }} />\n    )\n}\n","import React from \"react\";\n\nimport \"./style.css\";\n\nfunction Container(props) {\n    return <main className=\"container\">{props.children}</main>;\n  }\n  export default Container;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport API from \"./utils/Api\";\nimport Table from \"./components/Table/index\";\nimport Search from \"./components/SearchForm/index\";\nimport Sort from \"./components/SortBtn/index\";\nimport Container from \"./components/Container/index\";\n\nfunction App() {\n\n    const [employees, setEmployees] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [filteredEmployees, setFilteredEmployees] = useState([]);\n    const [sortedEmployees, setSortedEmployees] = useState([]);\n    const tableCellHeaders = [\"First\", \"Last\", \"E-mail\", \"Phone\"];\n\n    //API call used to retreieve users.  setEmployees sets our employees array state.\n    useEffect(() => {\n        API.getRandomUsers().then((res) => {\n            console.log(res);\n            setEmployees(res.data.results);\n        })\n        //getRandom()\n    }, []);\n\n    //alternate method not used.\n\n    //   const getRandom = async () => {\n    //       console.log('here')\n    //     //   try {\n    //     //       let result = await  API.getRandomUsers();\n    //     //       console.log('result', result)\n    //     //   } catch (error) {\n    //     //       console.log('err getRandom', error)\n    //     //   }\n    //   }\n\n\n    //this hook states that if there is a search query, the result will filter through the employee array based on name.  This is fired up with each change of the search.\n    useEffect(() => {\n        if (search) {\n            const filteredResult = employees.filter(employee => {\n                if (\n                    employee.name.first.toLowerCase().includes(search) ||\n                    employee.name.last.toLowerCase().includes(search) ||\n                    employee.name.first.includes(search) ||\n                    employee.name.last.includes(search)\n                ) {\n                    return employee;\n                }\n            });\n            //console.log(filteredResult);\n            setFilteredEmployees(filteredResult);\n        }\n    }, [search, employees]);\n\n    // useEffect(() => {\n    //     const sort = employees.sort((a, b) => {\n    //         return a.name.first.localeCompare(b.name.first);\n    //     });\n    //     console.log(sort);\n    //     setSortedEmployees(sort);\n    // }), [];\n\n    function sortEmployees() {\n        let sort\n        if (search) {\n            sort = filteredEmployees.sort((a, b) => {\n                return a.name.first.localeCompare(b.name.first);\n            });\n            console.log(sort);\n        }\n        else {\n            sort = employees.sort((a, b) => {\n                return a.name.first.localeCompare(b.name.first);\n            });\n            console.log(sort);\n        }\n\n        setSortedEmployees(sort)\n\n    }\n\n\n\n    //renders the Search and Table components to the page. Table needs to display the search bar.\n    //if there is no search in the Search Bar all users will be displayed else the filtered employees will render.\n    return (\n        <Container>\n            <div>\n                <Search search={search} setSearch={setSearch} />\n                <Table tableCellHeaders={tableCellHeaders} displayTable={!search ? employees : filteredEmployees} sort={sortEmployees} sorted={sortedEmployees}/>\n                \n            </div>\n        </Container>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}